// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewGovernor extends ethereum.Event {
  get params(): NewGovernor__Params {
    return new NewGovernor__Params(this);
  }
}

export class NewGovernor__Params {
  _event: NewGovernor;

  constructor(event: NewGovernor) {
    this._event = event;
  }

  get newGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewToken extends ethereum.Event {
  get params(): NewToken__Params {
    return new NewToken__Params(this);
  }
}

export class NewToken__Params {
  _event: NewToken;

  constructor(event: NewToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class ValidatorStatusUpdate extends ethereum.Event {
  get params(): ValidatorStatusUpdate__Params {
    return new ValidatorStatusUpdate__Params(this);
  }
}

export class ValidatorStatusUpdate__Params {
  _event: ValidatorStatusUpdate;

  constructor(event: ValidatorStatusUpdate) {
    this._event = event;
  }

  get validatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Governance extends ethereum.SmartContract {
  static bind(address: Address): Governance {
    return new Governance("Governance", address);
  }

  isValidTokenId(_tokenId: i32): boolean {
    let result = super.call("isValidTokenId", "isValidTokenId(uint16):(bool)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))
    ]);

    return result[0].toBoolean();
  }

  try_isValidTokenId(_tokenId: i32): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidTokenId",
      "isValidTokenId(uint16):(bool)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  networkGovernor(): Address {
    let result = super.call(
      "networkGovernor",
      "networkGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_networkGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "networkGovernor",
      "networkGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenAddresses(param0: i32): Address {
    let result = super.call(
      "tokenAddresses",
      "tokenAddresses(uint16):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return result[0].toAddress();
  }

  try_tokenAddresses(param0: i32): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenAddresses",
      "tokenAddresses(uint16):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenIds(param0: Address): i32 {
    let result = super.call("tokenIds", "tokenIds(address):(uint16)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_tokenIds(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall("tokenIds", "tokenIds(address):(uint16)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  totalTokens(): i32 {
    let result = super.call("totalTokens", "totalTokens():(uint16)", []);

    return result[0].toI32();
  }

  try_totalTokens(): ethereum.CallResult<i32> {
    let result = super.tryCall("totalTokens", "totalTokens():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  validateTokenAddress(_tokenAddr: Address): i32 {
    let result = super.call(
      "validateTokenAddress",
      "validateTokenAddress(address):(uint16)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );

    return result[0].toI32();
  }

  try_validateTokenAddress(_tokenAddr: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "validateTokenAddress",
      "validateTokenAddress(address):(uint16)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  validators(param0: Address): boolean {
    let result = super.call("validators", "validators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_validators(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("validators", "validators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class ChangeGovernorCall extends ethereum.Call {
  get inputs(): ChangeGovernorCall__Inputs {
    return new ChangeGovernorCall__Inputs(this);
  }

  get outputs(): ChangeGovernorCall__Outputs {
    return new ChangeGovernorCall__Outputs(this);
  }
}

export class ChangeGovernorCall__Inputs {
  _call: ChangeGovernorCall;

  constructor(call: ChangeGovernorCall) {
    this._call = call;
  }

  get _newGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeGovernorCall__Outputs {
  _call: ChangeGovernorCall;

  constructor(call: ChangeGovernorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get initializationParameters(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetValidatorCall extends ethereum.Call {
  get inputs(): SetValidatorCall__Inputs {
    return new SetValidatorCall__Inputs(this);
  }

  get outputs(): SetValidatorCall__Outputs {
    return new SetValidatorCall__Outputs(this);
  }
}

export class SetValidatorCall__Inputs {
  _call: SetValidatorCall;

  constructor(call: SetValidatorCall) {
    this._call = call;
  }

  get _validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _active(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetValidatorCall__Outputs {
  _call: SetValidatorCall;

  constructor(call: SetValidatorCall) {
    this._call = call;
  }
}

export class UpgradeCall extends ethereum.Call {
  get inputs(): UpgradeCall__Inputs {
    return new UpgradeCall__Inputs(this);
  }

  get outputs(): UpgradeCall__Outputs {
    return new UpgradeCall__Outputs(this);
  }
}

export class UpgradeCall__Inputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }

  get upgradeParameters(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpgradeCall__Outputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }
}
